import random
import string
from datetime import datetime, timedelta

def generate_random_id(length=6):
    lower_bound = 10**(length-1)
    upper_bound = (10**length) - 1
    return random.randint(lower_bound, upper_bound)

def generate_random_string(length=8):
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(length))

def generate_random_items(num_items=5):
    items = {}
    for _ in range(num_items):
        item_id = generate_random_string(6)
        quantity = random.randint(1, 10)
        items[item_id] = quantity
    return items


def generate_insert_statements(num_records, cardapio_data):
    statements = []

    cliente_ids = [
        ('121018'),('317419'),('261325'),('743257'),('803663'),('154932'),('769696'),('533324'),('482179'),('104083'),('581715'),('514555'),('270807'),('939917'),('276541'),('263944'),('357214'),('874850'),('992222'),('557467'),('192938'),('920393'),('817465'),('878294'),('799124'),('184193'),('191035'),('343471'),('309616'),('705809'),('437534'),('412195'),('306775'),('641539'),('444722'),('571266'),('121276'),('492781'),('588456'),('835548'),('136972'),('984918'),('777854'),('921982'),('232959'),('777605'),('325854'),('913559'),('620178'),('942891'),('870232'),('278837'),('990404'),('624595'),('238870'),('825617'),('302763'),('852309'),('558560'),('789959'),('678871'),('106768'),('465717'),('551369'),('884298'),('656995'),('268469'),('227496'),('834031'),('909942'),('139475'),('743318'),('710928'),('361711'),('130100'),('977611'),('481767'),('714827'),('895254'),('860801'),('685635'),('491377'),('697825'),('356008'),('541146'),('721086'),('916998'),('767711'),('689285'),('630238'),('534819'),('983564'),('528717'),('721495'),('818866'),('283172'),('101011'),('221700'),('143408'),('894492'),('753328'),('739748'),('144409'),('301201'),('948769'),('947182'),('680609'),('889484'),('522175'),('427701'),('568773'),('513255'),('138379'),('747898'),('745072'),('223925'),('658533'),('463231'),('620270'),('381440'),('803409'),('538839'),('239740'),('668747'),('981654'),('746368'),('115011'),('749548'),('653260'),('880809'),('385466'),('875266'),('807907'),('942357'),('232041')
    ]
        
    status_options = ['Pending', 'In Progress', 'Completed', 'Cancelled']
    start_date = datetime.now() - timedelta(days=365)
    
    for i in range(1, num_records + 1):
        pedido_id = generate_random_id(8)
        cliente_id = random.choice(cliente_ids)
        restaurante_id, item_id, preco = random.choice(cardapio_data)
        data_hora_pedido = start_date + timedelta(days=random.randint(0, 365), hours=random.randint(0, 23), minutes=random.randint(0, 59))
        status = random.choice(status_options)
        itens = {item_id: random.randint(1, 10)}
        total = sum(quantity * preco for quantity in itens.values())
        
        itens_str = '{' + ', '.join([f"'{k}': {v}" for k, v in itens.items()]) + '}'
        
        statement = f"INSERT INTO pedidos (pedido_id, cliente_id, restaurante_id, data_hora_pedido, status, total, itens) VALUES ({pedido_id}, {cliente_id}, '{restaurante_id}', '{data_hora_pedido}', '{status}', {total}, {itens_str});"
        statements.append(statement)
    
    return statements


cardapio_data = [
    ('882689', '911', 88.2), ('516536', '196', 11.98), ('882689', '195', 67.66), 
    ('897122', '337', 53.22), ('882689', '148', 83.8), ('516536', '228', 85.6), 
    ('161763', '207', 90.05), ('549469', '571', 32.86), ('856996', '573', 32.84), 
    ('400851', '126', 74.86), ('882689', '922', 19.92), ('216182', '745', 45.45),
    ('549469', '537', 20.23), ('365193', '943', 32.22), ('365193', '212', 31.47), 
    ('202305', '179', 74.51), ('365193', '274', 11.1), ('549469', '275', 67.54), 
    ('216182', '393', 52.54), ('549469', '905', 62.76), ('882689', '625', 84.09), 
    ('400851', '200', 83.73), ('856996', '911', 69.97), ('897122', '788', 76.85), 
    ('516536', '404', 74.17), ('882689', '571', 24.78), ('856996', '127', 61.81), 
    ('161763', '411', 16.31), ('202305', '632', 54.47), ('161763', '755', 30.12), 
    ('216182', '932', 96.68), ('516536', '482', 87.77), ('856996', '127', 93.5), 
    ('897122', '235', 30.54), ('516536', '183', 93.84), ('216182', '803', 48.61), 
    ('161763', '229', 22.75), ('856996', '950', 77.57), ('202305', '783', 22.25), 
    ('365193', '454', 26.89), ('400851', '731', 49.61), ('400851', '351', 11.63), 
    ('161763', '914', 51.62), ('516536', '263', 68.15), ('161763', '862', 69.93), 
    ('365193', '840', 86.26), ('882689', '475', 66.44), ('549469', '690', 86.16), 
    ('202305', '376', 81.28), ('202305', '387', 48.09), ('549469', '428', 10.29), 
    ('216182', '954', 76.38), ('202305', '835', 77.38), ('365193', '419', 74.16), 
    ('400851', '234', 73.55), ('216182', '785', 40.97), ('161763', '524', 10.02), 
    ('549469', '925', 99.75), ('856996', '733', 67.09), ('216182', '335', 25.49), 
    ('549469', '946', 66.89), ('202305', '711', 69.34), ('897122', '113', 25.88), 
    ('161763', '786', 68.05), ('856996', '322', 41.84), ('516536', '727', 46.6), 
    ('161763', '958', 90.5), ('365193', '343', 44.73), ('549469', '317', 25.68), 
    ('216182', '504', 79.4), ('516536', '998', 33.51), ('882689', '207', 47.82), 
    ('549469', '842', 93.29), ('365193', '712', 48.51), ('882689', '604', 74.53), 
    ('549469', '550', 68.95), ('216182', '853', 39.93), ('400851', '541', 89.76), 
    ('897122', '859', 21.03), ('516536', '141', 57.43), ('882689', '969', 52.56), 
    ('216182', '773', 82.42), ('365193', '578', 92.43), ('216182', '137', 39.8), 
    ('897122', '851', 52.14), ('400851', '219', 79.81), ('549469', '498', 98.56), 
    ('897122', '726', 17.58), ('897122', '719', 75.34), ('400851', '639', 76.64), 
    ('897122', '995', 32.73), ('202305', '495', 38.46), ('161763', '212', 20.22), 
    ('549469', '881', 48.35), ('882689', '175', 36.77), ('549469', '724', 39.08), 
    ('856996', '211', 30.87), ('549469', '919', 12.79), ('897122', '958', 55.5), 
    ('202305', '620', 17.22), ('856996', '455', 94.98), ('216182', '647', 67.68), 
    ('882689', '663', 64.0), ('216182', '247', 66.08), ('365193', '796', 98.67), 
    ('365193', '426', 72.05), ('897122', '537', 42.45), ('882689', '603', 98.14), 
    ('365193', '368', 43.77), ('516536', '127', 80.78), ('202305', '723', 98.04), 
    ('882689', '807', 94.57), ('202305', '161', 66.37), ('516536', '151', 66.11), 
    ('882689', '567', 44.82), ('856996', '137', 53.94), ('216182', '333', 69.82), 
    ('897122', '113', 27.73), ('516536', '593', 86.3), ('549469', '160', 33.8), 
    ('856996', '529', 55.17), ('516536', '629', 91.0), ('516536', '669', 63.15), 
    ('897122', '515', 61.29), ('400851', '545', 84.92), ('161763', '780', 23.62), 
    ('161763', '221', 29.94), ('400851', '313', 48.64), ('516536', '552', 95.3), 
    ('897122', '108', 70.05), ('516536', '888', 91.15), ('549469', '210', 18.78), 
    ('856996', '949', 59.13), ('549469', '228', 11.23), ('549469', '254', 45.42), 
    ('882689', '497', 73.92), ('400851', '665', 86.29), ('365193', '344', 17.17), 
    ('161763', '408', 92.97), ('216182', '668', 55.62), ('202305', '248', 43.42), 
    ('161763', '157', 33.33), ('882689', '699', 70.12), ('400851', '480', 92.32), 
    ('516536', '463', 11.7), ('400851', '446', 82.83), ('882689', '154', 18.51), 
    ('882689', '980', 60.95), ('897122', '539', 73.79), ('400851', '974', 73.39), 
    ('365193', '582', 84.6), ('202305', '146', 52.52), ('161763', '180', 46.44), 
    ('365193', '701', 97.78), ('216182', '975', 75.14), ('516536', '384', 93.26), 
    ('897122', '738', 25.84), ('516536', '744', 46.7), ('202305', '305', 91.73), 
    ('882689', '911', 88.2), ('516536', '196', 11.98), ('882689', '195', 67.66), 
    ('897122', '337', 53.22), ('882689', '148', 83.8), ('516536', '228', 85.6), 
    ('161763', '207', 90.05), ('549469', '571', 32.86), ('856996', '573', 32.84), 
    ('400851', '126', 74.86), ('882689', '922', 19.92), ('216182', '745', 45.45),
    ('549469', '537', 20.23), ('365193', '943', 32.22), ('365193', '212', 31.47), 
    ('202305', '179', 74.51), ('365193', '274', 11.1), ('549469', '275', 67.54), 
    ('216182', '393', 52.54), ('549469', '905', 62.76), ('882689', '625', 84.09), 
    ('400851', '200', 83.73), ('856996', '911', 69.97), ('897122', '788', 76.85), 
    ('516536', '404', 74.17), ('882689', '571', 24.78), ('856996', '127', 61.81), 
    ('161763', '411', 16.31), ('202305', '632', 54.47), ('161763', '755', 30.12), 
    ('216182', '932', 96.68), ('516536', '482', 87.77), ('856996', '127', 93.5), 
    ('897122', '235', 30.54), ('516536', '183', 93.84), ('216182', '803', 48.61), 
    ('161763', '229', 22.75), ('856996', '950', 77.57), ('202305', '783', 22.25), 
    ('365193', '454', 26.89), ('400851', '731', 49.61), ('400851', '351', 11.63), 
    ('161763', '914', 51.62), ('516536', '263', 68.15), ('161763', '862', 69.93), 
    ('365193', '840', 86.26), ('882689', '475', 66.44), ('549469', '690', 86.16), 
    ('202305', '376', 81.28), ('202305', '387', 48.09), ('549469', '428', 10.29), 
    ('216182', '954', 76.38), ('202305', '835', 77.38), ('365193', '419', 74.16), 
    ('400851', '234', 73.55), ('216182', '785', 40.97), ('161763', '524', 10.02), 
    ('549469', '925', 99.75), ('856996', '733', 67.09), ('216182', '335', 25.49), 
    ('549469', '946', 66.89), ('202305', '711', 69.34), ('897122', '113', 25.88), 
    ('161763', '786', 68.05), ('856996', '322', 41.84), ('516536', '727', 46.6), 
    ('161763', '958', 90.5), ('365193', '343', 44.73), ('549469', '317', 25.68), 
    ('216182', '504', 79.4), ('516536', '998', 33.51), ('882689', '207', 47.82), 
    ('549469', '842', 93.29), ('365193', '712', 48.51), ('882689', '604', 74.53), 
    ('549469', '550', 68.95), ('216182', '853', 39.93), ('400851', '541', 89.76), 
    ('897122', '859', 21.03), ('516536', '141', 57.43), ('882689', '969', 52.56), 
    ('216182', '773', 82.42), ('365193', '578', 92.43), ('216182', '137', 39.8), 
    ('897122', '851', 52.14), ('400851', '219', 79.81), ('549469', '498', 98.56), 
    ('897122', '726', 17.58), ('897122', '719', 75.34), ('400851', '639', 76.64), 
    ('897122', '995', 32.73), ('202305', '495', 38.46), ('161763', '212', 20.22), 
    ('549469', '881', 48.35), ('882689', '175', 36.77), ('549469', '724', 39.08), 
    ('856996', '211', 30.87), ('549469', '919', 12.79), ('897122', '958', 55.5), 
    ('202305', '620', 17.22), ('856996', '455', 94.98), ('216182', '647', 67.68), 
    ('882689', '663', 64.0), ('216182', '247', 66.08), ('365193', '796', 98.67), 
    ('365193', '426', 72.05), ('897122', '537', 42.45), ('882689', '603', 98.14), 
    ('365193', '368', 43.77), ('516536', '127', 80.78), ('202305', '723', 98.04), 
    ('882689', '807', 94.57), ('202305', '161', 66.37), ('516536', '151', 66.11), 
    ('882689', '567', 44.82), ('856996', '137', 53.94), ('216182', '333', 69.82), 
    ('897122', '113', 27.73), ('516536', '593', 86.3), ('549469', '160', 33.8), 
    ('856996', '529', 55.17), ('516536', '629', 91.0), ('516536', '669', 63.15), 
    ('897122', '515', 61.29), ('400851', '545', 84.92), ('161763', '780', 23.62), 
    ('161763', '221', 29.94), ('400851', '313', 48.64), ('516536', '552', 95.3), 
    ('897122', '108', 70.05), ('516536', '888', 91.15), ('549469', '210', 18.78), 
    ('856996', '949', 59.13), ('549469', '228', 11.23), ('549469', '254', 45.42), 
    ('882689', '497', 73.92), ('400851', '665', 86.29), ('365193', '344', 17.17), 
    ('161763', '408', 92.97), ('216182', '668', 55.62), ('202305', '248', 43.42), 
    ('161763', '157', 33.33), ('882689', '699', 70.12), ('400851', '480', 92.32), 
    ('516536', '463', 11.7), ('400851', '446', 82.83), ('882689', '154', 18.51), 
    ('882689', '980', 60.95), ('897122', '539', 73.79), ('400851', '974', 73.39), 
    ('365193', '582', 84.6), ('202305', '146', 52.52), ('161763', '180', 46.44), 
    ('365193', '701', 97.78), ('216182', '975', 75.14), ('516536', '384', 93.26), 
    ('897122', '738', 25.84), ('516536', '744', 46.7), ('202305', '305', 91.73) 
    ]

num_records = 4980
insert_statements = generate_insert_statements(num_records, cardapio_data)

file_path = r'C:\Users\010441631\Documents\GitHub\eng-dados-pos\eng-dados-pos\NoSQL\KeroKomer-final-project\data\pedido_insert_statements.txt'
with open(file_path, 'w') as file:
    for statement in insert_statements:
        file.write(statement + '\n')
